
<script type="text/javascript" src="https://www.google.com/jsapi"></script>
<script type="text/javascript">
	var users = <%= raw @users.to_json %>,
		first = Math.min.apply(0, users.map( function(el) { return new Date(el.created_at).getTime() } ) ),
		firstWeek = new Date( '08-26-2012' ).getTime(),
		weeks = Math.round( (new Date().getTime() - firstWeek ) / ( 1000*60*60*24*7 ) ),
		growth = [ ['Week','Users'] ]

		date = firstWeek
	for (var i=0; i < weeks; i++) {
		date += 1000*60*60*24*7
		label = new Date( date ).toDateString().split(' ')
		label.shift()
		count = users.filter( function(el) { return new Date(el.created_at).getTime() < date }).length

		growth.push( [label.join(' '),count ] )
	};

	google.load("visualization", "1", {packages:["corechart",'geochart']});
	google.setOnLoadCallback(drawChart);
	function drawChart() {
		var data = google.visualization.arrayToDataTable( growth );

	var options = {
		legend: 'none',
		pointSize: 5,
		backgroundColor: { fill:'transparent' }
	};

	var chart = new google.visualization.AreaChart(document.getElementById('chart_div'));
	chart.draw(data, options);
	

        var data = google.visualization.arrayToDataTable( <%= raw Match.all.map{ |m| [ m.latlng.split(',')[0].to_f , m.latlng.split(',')[1].to_f ] } %>  );

		var options = { sizeAxis: { maxSize: 3}, markerOpacity: 0.4, backgroundColor: { fill:'transparent' }, region: 'US', resolution: 'provinces' };

		var chart = new google.visualization.GeoChart(document.getElementById('match_div'));
        chart.draw(data, options);

}
</script>
<h1>Stats</h1>
<h2 style="text-align: center">Users</h2>
<h3>User By Week</h3>
<div id="chart_div" style="margin-left: -200px; width: 1000px; height: 500px;"></div>
<div class="stats">
	<h3><%= @users.count %> Total Users</h3>
	<p><strong>Who've voted:</strong> <%= @users.select{ |u| u[:votes] > 0 }.count %> ( <%= ( @users.select{ |u| u[:votes] > 0 }.count / @users.count.to_f * 100).round(1) %>%)</p>
	<p><strong>Who've commented:</strong> <%= @users.select{ |u| u[:comments] > 0  }.count %> ( <%= ( @users.select{ |u| u[:comments] > 0 }.count / @users.count.to_f * 100 ).round(1) %>%) </p>
	<p><strong>With a header pic:</strong> <%= @users.select{ |u| u[:header]  }.count %> ( <%= ( @users.select{ |u| u[:header] }.count / @users.count.to_f * 100 ).round(1) %>%) </p>
	<p><strong>With a custom url: </strong> <%= @users.select{ |u| u[:header]  }.count %> ( <%= ( @users.select{ |u| u[:header] }.count / @users.count.to_f * 100 ).round(1) %>%) </p>
	<p><strong>Most Useful User: </strong> <%= @users.map{ |u| u[:popularity]  }.max %> </p>
	<p><strong>Avg Usefulness: </strong> <%= ( @users.map{ |u| u[:popularity]  }.sum / @users.select{ |u| u[:comments]}.count.to_f ).round(1) %> </p>
	<% if current_user && current_user.admin? %>
		<p><span class="admin">ADMIN ONLY</span><strong>Who authorized facebook pages: </strong> <%= @users.select{ |u| u[:pages]  }.count %> ( <%= ( @users.select{ |u| u[:pages] }.count / @users.count.to_f * 100 ).round(1) %>%)</p></p>
	<% end %>
</div>


<h2 style="text-align: center">Matches</h2>
<p>A match is whenever someone looks up an address using The Ballot.</p>
<p>We keep (an anonymized) record of the lookup so we don't have to repeat it.</p>

<div id="match_div" style="margin-left: -100px; width: 800px; height: 500px;"></div>

<h3><%= @matches.count %> Total Matches</h3>

<% @matchStates.sort_by{ |m| m[:count] }.reverse.each do |state| %>
	<p><strong><%= state[:state] %></strong> <%= state[:count] %> matches<%='s' if state[:count] > 1 %></p>
<% end %>
